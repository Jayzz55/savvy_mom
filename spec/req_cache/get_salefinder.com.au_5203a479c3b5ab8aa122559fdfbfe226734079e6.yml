---
:scope: 
:url: http://salefinder.com.au/js/jquery.cookie.js
:body: ''
:status: 200
:method: get
:headers:
  Date: Mon, 23 Mar 2015 11:10:26 GMT
  Server: Apache/2.2.15 (Red Hat)
  Last-Modified: Sun, 03 Nov 2013 11:57:37 GMT
  ETag: '"9a0bb8-caa-4ea4481744483"'
  Accept-Ranges: bytes
  Content-Length: '3242'
  Connection: close
  Content-Type: text/javascript
:content: "/*!\r\n * jQuery Cookie Plugin v1.4.0\r\n * https://github.com/carhartl/jquery-cookie\r\n
  *\r\n * Copyright 2013 Klaus Hartl\r\n * Released under the MIT license\r\n */\r\n(function
  (factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD.
  Register as anonymous module.\r\n\t\tdefine(['jquery'], factory);\r\n\t} else {\r\n\t\t//
  Browser globals.\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function ($) {\r\n\r\n\tvar
  pluses = /\\+/g;\r\n\r\n\tfunction encode(s) {\r\n\t\treturn config.raw ? s : encodeURIComponent(s);\r\n\t}\r\n\r\n\tfunction
  decode(s) {\r\n\t\treturn config.raw ? s : decodeURIComponent(s);\r\n\t}\r\n\r\n\tfunction
  stringifyCookieValue(value) {\r\n\t\treturn encode(config.json ? JSON.stringify(value)
  : String(value));\r\n\t}\r\n\r\n\tfunction parseCookieValue(s) {\r\n\t\tif (s.indexOf('\"')
  === 0) {\r\n\t\t\t// This is a quoted cookie as according to RFC2068, unescape...\r\n\t\t\ts
  = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\r\n\t\t}\r\n\r\n\t\ttry
  {\r\n\t\t\t// Replace server-side written pluses with spaces.\r\n\t\t\t// If we
  can't decode the cookie, ignore it, it's unusable.\r\n\t\t\t// If we can't parse
  the cookie, ignore it, it's unusable.\r\n\t\t\ts = decodeURIComponent(s.replace(pluses,
  ' '));\r\n\t\t\treturn config.json ? JSON.parse(s) : s;\r\n\t\t} catch(e) {}\r\n\t}\r\n\r\n\tfunction
  read(s, converter) {\r\n\t\tvar value = config.raw ? s : parseCookieValue(s);\r\n\t\treturn
  $.isFunction(converter) ? converter(value) : value;\r\n\t}\r\n\r\n\tvar config =
  $.cookie = function (key, value, options) {\r\n\r\n\t\t// Write\r\n\t\tif (value
  !== undefined && !$.isFunction(value)) {\r\n\t\t\toptions = $.extend({}, config.defaults,
  options);\r\n\r\n\t\t\tif (typeof options.expires === 'number') {\r\n\t\t\t\tvar
  days = options.expires, t = options.expires = new Date();\r\n\t\t\t\tt.setDate(t.getDate()
  + days);\r\n\t\t\t}\r\n\r\n\t\t\treturn (document.cookie = [\r\n\t\t\t\tencode(key),
  '=', stringifyCookieValue(value),\r\n\t\t\t\toptions.expires ? '; expires=' + options.expires.toUTCString()
  : '', // use expires attribute, max-age is not supported by IE\r\n\t\t\t\toptions.path
  \   ? '; path=' + options.path : '',\r\n\t\t\t\toptions.domain  ? '; domain=' +
  options.domain : '',\r\n\t\t\t\toptions.secure  ? '; secure' : ''\r\n\t\t\t].join(''));\r\n\t\t}\r\n\r\n\t\t//
  Read\r\n\r\n\t\tvar result = key ? undefined : {};\r\n\r\n\t\t// To prevent the
  for loop in the first place assign an empty array\r\n\t\t// in case there are no
  cookies at all. Also prevents odd result when\r\n\t\t// calling $.cookie().\r\n\t\tvar
  cookies = document.cookie ? document.cookie.split('; ') : [];\r\n\r\n\t\tfor (var
  i = 0, l = cookies.length; i < l; i++) {\r\n\t\t\tvar parts = cookies[i].split('=');\r\n\t\t\tvar
  name = decode(parts.shift());\r\n\t\t\tvar cookie = parts.join('=');\r\n\r\n\t\t\tif
  (key && key === name) {\r\n\t\t\t\t// If second argument (value) is a function it's
  a converter...\r\n\t\t\t\tresult = read(cookie, value);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//
  Prevent storing a cookie that we couldn't decode.\r\n\t\t\tif (!key && (cookie =
  read(cookie)) !== undefined) {\r\n\t\t\t\tresult[name] = cookie;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn
  result;\r\n\t};\r\n\r\n\tconfig.defaults = {\r\n\t\texpires: 365,\r\n\t\tpath: '/',\r\n\t\tdomain:
  '.salefinder.com.au'\r\n\t};\r\n\r\n\t$.removeCookie = function (key, options) {\r\n\t\tif
  ($.cookie(key) === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Must
  not alter options, thus extending a fresh object...\r\n\t\t$.cookie(key, '', $.extend({},
  options, { expires: -1 }));\r\n\t\treturn !$.cookie(key);\r\n\t};\r\n\r\n}));"
